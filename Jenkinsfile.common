container('dotnetcore') {
  gitlabBuilds(builds: ['build', 'test', 'sonarqube', 'quality_gate', 'docker']) {

    stage('build') { gitlabCommitStatus(name: 'build') {
      sh """
	  dotnet restore --source https://nexus.quantion.com/repository/nuget-group/
      dotnet build -c Release -o /app
      """  }}


    stage('test') { gitlabCommitStatus(name: 'test') {
      
      sh """
      dotnet test "./customerportalapi.Services.Test/customerportalapi.Services.Test.csproj"
      """
    }}
    /* stage('sonarqube') {
      gitlabCommitStatus(name: 'sonarqube')  {
        container('sonar') {
          def sqScannerMsBuildHome = tool 'QuantionNetSonarqube'
          withSonarQubeEnv('QuantionSonarqubeScanner') {
            sh """
            dotnet "${sqScannerMsBuildHome}/SonarScanner.MSBuild.dll" begin /k:"bluespace-customerportal-backend" 
            dotnet build "./customerportalapi.sln"
            dotnet "${sqScannerMsBuildHome}/SonarScanner.MSBuild.dll" end
            """
          }
        }
      }
    }
    stage("quality_gate"){
      gitlabCommitStatus(name: 'quality_gate')  {
        container('java') {
          timeout(time: 10, unit: 'MINUTES') {
              def qg = waitForQualityGate()
              if (qg.status != 'OK') {
                  error "Pipeline aborted due to quality gate failure"
              }
          }
        }
      }
    }*/

    stage("docker") {
      gitlabCommitStatus(name: 'docker')  {
        container('docker') {
          def registry = 'registry.quantion.com'
          def service = 'bluespace-customerportal-web'

          script {
            docker.withRegistry('https://registry.quantion.com', 'registry_docker_credentials') {

              def image = docker.build("${registry}/${service}/backend", "--network container:\$(docker ps | grep \$(hostname) | grep k8s_jnlp | cut -d\" \" -f1) -f Dockerfile .")
              image.push("b_${env.gitlabSourceBranch}")
              image.push("latest")
            }
          }
        }
      }
    }
  }
}
